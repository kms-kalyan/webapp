name: Packer Format and Validate

on:
  pull_request:
    branches:
      - main

jobs:
  ami_format_check:
    name: ami_format_check
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Zip Folder
        run: zip -r webapp.zip .

      - name: Install Packer
        run: |
          wget https://releases.hashicorp.com/packer/1.7.4/packer_1.7.4_linux_amd64.zip
          unzip -o packer_1.7.4_linux_amd64.zip -d packer_temp
          sudo mv -f packer_temp/packer /usr/local/bin         
        shell: bash

      - name: Packer Format
        run: |
          cd packer
          pwd
          if ! packer fmt aws.pkr.hcl; then
            echo "Packer formatting check failed. Run 'packer fmt' to fix the formatting issues."
            exit 1
          else
            echo "Packer format check passed"
          fi
        shell: bash

      - name: Packer Validate
        run: |
          cd packer
          pwd
          packer init ./
          if ! packer validate aws.pkr.hcl; then
            echo "Packer validation check failed."
            exit 1
          else
            echo "Packer validation check passed"
          fi
        shell: bash
        
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install
        env:
          SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Run tests
        run: mvn test
        env:
          SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}