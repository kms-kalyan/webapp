name: CI

on:
  push:
    branches:
      - main
      - feature-A05

jobs:
  integration_test:
    name: Integration test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Postgres@55
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Build with Maven
      run: mvn clean install
      env:
        SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
        SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}

    - name: Run tests
      run: mvn test
      env:
        SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
        SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}

  build-image:
    name: Build Custom Amazon Machine Image (AMI) Using Packer
    runs-on: ubuntu-latest
    needs: integration_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Zip repository code
        run: |
          zip -r webapp.zip .

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Packer setup
        uses: hashicorp/setup-packer@main
        with:
          packer-version: 1.7.4

      - name: Run packer
        id: packer
        run: |
          cd packer
          packer init aws.pkr.hcl
          packer build -machine-readable aws.pkr.hcl | tee packer.log
          AMI_ID=$(awk -F, '/artifact,0,id/ {print $6}' packer.log | cut -d: -f2)
          echo "ami_id=$AMI_ID" >> $GITHUB_OUTPUT

      - name: Sharing the AMI with Demo Account
        run: |
          aws ec2 modify-image-attribute --image-id ${{ steps.packer.outputs.ami_id }} --launch-permission '{"Add":[{"UserId": "${{ secrets.DEMO_ACCOUNT_ID}}" }]}'